{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Improbus\\\\VSCodeProjects\\\\dating-app\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  _s();\n\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUsersMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\n\n  const getUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: {\n          userId: userId,\n          correspondingUserId: clickedUserId\n        }\n      });\n      setUsersMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getClickedUsersMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/messages\", {\n        params: {\n          userId: clickedUserId,\n          correspondingUserId: userId\n        }\n      });\n      setClickedUsersMessages(response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getUsersMessages();\n    getClickedUsersMessages();\n  }, []);\n  const messages = []; // usersMessages?.forEach((message) => {\n  //   const formattedMessage = {};\n  //   formattedMessage[\"name\"] = user?.first_name;\n  //   formattedMessage[\"img\"] = user?.url;\n  //   formattedMessage[\"message\"] = message.message;\n  //   formattedMessage[\"timestamp\"] = message.timestamp;\n  //   messages.push(formattedMessage);\n  // });\n  // clickedUsersMessages?.forEach((message) => {\n  //   const formattedMessage = {};\n  //   formattedMessage[\"name\"] = clickedUser?.first_name;\n  //   formattedMessage[\"img\"] = clickedUser?.url;\n  //   formattedMessage[\"message\"] = message.message;\n  //   formattedMessage[\"timestamp\"] = message.timestamp;\n  //   messages.push(formattedMessage);\n  // });\n\n  const descendingOrderMessages = messages === null || messages === void 0 ? void 0 : messages.sort((a, b) => a.timestamp.localeCompare(b.timestamp));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {\n      descendingOrderMessages: descendingOrderMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      user: user,\n      clickedUser: clickedUser,\n      getUsersMessages: getUsersMessages,\n      getClickedUsersMessages: getClickedUsersMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatDisplay, \"2NEB42wPVsAhSx/Wnejt8YtyMTY=\");\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"sources":["C:/Users/Improbus/VSCodeProjects/dating-app/client/src/components/ChatDisplay.js"],"names":["axios","useEffect","useState","Chat","ChatInput","ChatDisplay","user","clickedUser","userId","user_id","clickedUserId","usersMessages","setUsersMessages","clickedUsersMessages","setClickedUsersMessages","getUsersMessages","response","get","params","correspondingUserId","data","err","console","log","getClickedUsersMessages","messages","descendingOrderMessages","sort","a","b","timestamp","localeCompare"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,WAAW,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA0B;AAC7C,QAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAArB;AACA,QAAMC,aAAa,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,OAAnC;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACW,oBAAD,EAAuBC,uBAAvB,IAAkDZ,QAAQ,CAAC,IAAD,CAAhE;;AAEA,QAAMa,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,gCAAV,EAA4C;AACjEC,QAAAA,MAAM,EAAE;AAAEV,UAAAA,MAAM,EAAEA,MAAV;AAAkBW,UAAAA,mBAAmB,EAAET;AAAvC;AADyD,OAA5C,CAAvB;AAGAE,MAAAA,gBAAgB,CAACI,QAAQ,CAACI,IAAV,CAAhB;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GATD;;AAWA,QAAMG,uBAAuB,GAAG,YAAY;AAC1C,QAAI;AACF,YAAMR,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,gCAAV,EAA4C;AACjEC,QAAAA,MAAM,EAAE;AAAEV,UAAAA,MAAM,EAAEE,aAAV;AAAyBS,UAAAA,mBAAmB,EAAEX;AAA9C;AADyD,OAA5C,CAAvB;AAGAM,MAAAA,uBAAuB,CAACE,QAAQ,CAACI,IAAV,CAAvB;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GATD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,gBAAgB;AAChBS,IAAAA,uBAAuB;AACxB,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,QAAQ,GAAG,EAAjB,CAjC6C,CAmC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,uBAAuB,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAC7CD,CAAC,CAACE,SAAF,CAAYC,aAAZ,CAA0BF,CAAC,CAACC,SAA5B,CAD8B,CAAhC;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,uBAAuB,EAAEJ;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,IAAI,EAAEpB,IADR;AAEE,MAAA,WAAW,EAAEC,WAFf;AAGE,MAAA,gBAAgB,EAAEQ,gBAHpB;AAIE,MAAA,uBAAuB,EAAES;AAJ3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD,CApED;;GAAMnB,W;;KAAAA,W;AAsEN,eAAeA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Chat from \"./Chat\";\r\nimport ChatInput from \"./ChatInput\";\r\n\r\nconst ChatDisplay = ({ user, clickedUser }) => {\r\n  const userId = user?.user_id;\r\n  const clickedUserId = clickedUser?.user_id;\r\n  const [usersMessages, setUsersMessages] = useState(null);\r\n  const [clickedUsersMessages, setClickedUsersMessages] = useState(null);\r\n\r\n  const getUsersMessages = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/messages\", {\r\n        params: { userId: userId, correspondingUserId: clickedUserId },\r\n      });\r\n      setUsersMessages(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const getClickedUsersMessages = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8000/messages\", {\r\n        params: { userId: clickedUserId, correspondingUserId: userId },\r\n      });\r\n      setClickedUsersMessages(response.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUsersMessages();\r\n    getClickedUsersMessages();\r\n  }, []);\r\n\r\n  const messages = [];\r\n\r\n  // usersMessages?.forEach((message) => {\r\n  //   const formattedMessage = {};\r\n  //   formattedMessage[\"name\"] = user?.first_name;\r\n  //   formattedMessage[\"img\"] = user?.url;\r\n  //   formattedMessage[\"message\"] = message.message;\r\n  //   formattedMessage[\"timestamp\"] = message.timestamp;\r\n  //   messages.push(formattedMessage);\r\n  // });\r\n\r\n  // clickedUsersMessages?.forEach((message) => {\r\n  //   const formattedMessage = {};\r\n  //   formattedMessage[\"name\"] = clickedUser?.first_name;\r\n  //   formattedMessage[\"img\"] = clickedUser?.url;\r\n  //   formattedMessage[\"message\"] = message.message;\r\n  //   formattedMessage[\"timestamp\"] = message.timestamp;\r\n  //   messages.push(formattedMessage);\r\n  // });\r\n\r\n  const descendingOrderMessages = messages?.sort((a, b) =>\r\n    a.timestamp.localeCompare(b.timestamp)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Chat descendingOrderMessages={descendingOrderMessages} />\r\n      <ChatInput\r\n        user={user}\r\n        clickedUser={clickedUser}\r\n        getUsersMessages={getUsersMessages}\r\n        getClickedUsersMessages={getClickedUsersMessages}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatDisplay;\r\n"]},"metadata":{},"sourceType":"module"}